#task1------------------------------------------------------------
"""
По данному целому числу N распечатайте все квадраты натуральных чисел, не превосходящие N, в порядке возрастания.
"""

n = int(input("n = "))
i = 1

while i ** 2 <= n:
	print("i^2 = ", i ** 2)
	i += 1 

#-----------------------------------------------------------------


#task2------------------------------------------------------------
"""
Дано целое число, не меньшее 2. Выведите его наименьший натуральный делитель, отличный от 1.
"""

n = int(input("n = "))
i = 2

if n < 2:
	print("invalid!")
else:
	while n % i != 0:
		i += 1
	print("The answer is ", i)	

#-----------------------------------------------------------------


#task3------------------------------------------------------------
"""
По данному натуральному числу N найдите наибольшую целую степень двойки, не превосходящую N. Выведите показатель степени и саму степень.
Операцией возведения в степень пользоваться нельзя!
"""

n = int(input("n = "))
i = 1
d = 0

while  i <= n:
	i = i*2
	d += 1
	
print("Degree = ", d - 1, "; i = ", i - i//2)

#-----------------------------------------------------------------


#task4------------------------------------------------------------
"""
В первый день спортсмен пробежал x километров, а затем он каждый день увеличивал пробег на 10% от предыдущего значения. 
По данному числу y определите номер дня, на который пробег спортсмена составит не менее y километров.

Программа получает на вход действительные числа x и y и должна вывести одно натуральное число.
"""

x = int(input("x = "))
y = int(input("y = "))
i = 0

while x <= y:
	x *= 1.1
	i += 1

print("Final day number = ", i)

#-----------------------------------------------------------------

#task5------------------------------------------------------------
"""
Вклад в банке составляет x рублей. Ежегодно он увеличивается на p процентов, после чего дробная часть копеек отбрасывается.
Определите, через сколько лет вклад составит не менее y рублей.

Выражение «дробная часть копеек отбрасывается» означает, что если у вас оказалось 123.4567 рублей, т. е. 123 рубля и 45.67 копеек, 
то после округления у вас получится 123 рубля и 45 копеек, т.е. 123.45 рублей.

Программа получает на вход три натуральных числа: x, p, y и должна вывести одно целое число.
"""

x = float(input("Start sum = "))
p = float(input("percent(enter in format 0.XX) = "))
y = float(input("Final sum = "))
i = 0

while x <= y:
	x *= p + 1
	x = round(x, 2)
	i += 1
print("Number of years = ", i, "; final sum = ", x)	

#-----------------------------------------------------------------


#task6------------------------------------------------------------
"""
Программа получает на вход последовательность целых неотрицательных чисел, каждое число записано в отдельной строке. 
Последовательность завершается числом 0, при считывании которого программа должна закончить свою работу 
и вывести количество членов последовательности (не считая завершающего числа 0). Числа, следующие за числом 0, считывать не нужно.
"""

i = 0
x = 1

while x != "0":
	x = input()
	i += 1
print("Length of sequence = ", i - 1)	

#-----------------------------------------------------------------


#task7------------------------------------------------------------
"""
Определите сумму всех элементов последовательности, завершающейся числом 0. 
В этой и во всех следующих задачах числа, следующие за первым нулем, учитывать не нужно.
"""

sum = 0
x = 1

while x != 0:
	x = int(input())
	sum += x
print("Sum of sequence = ", sum)	

#-----------------------------------------------------------------


#task8------------------------------------------------------------
"""
Определите среднее значение всех элементов последовательности, завершающейся числом 0.
"""

i = 0
x = 1
sum = 0 

while x != 0:
	x = int(input())
	sum += x
	i += 1
print("Average of sequence = ", sum/(i - 1))	

#-----------------------------------------------------------------


#task9------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0. 
Определите значение наибольшего элемента последовательности.
"""

e_max = 0
x = 1

while x != 0:
	x = int(input())
	if x > e_max:
		e_max = x
print("Max of sequence = ", e_max)	

#-----------------------------------------------------------------


#task10------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0. Определите индекс наибольшего элемента последовательности. 
Если наибольших элементов несколько, выведите индекс первого из них. Нумерация элементов начинается с нуля.
"""

i_max = 0
e_max = 1
i = 0
x = 1

while x != 0:
	x = int(input())
	if x > e_max:
		e_max = x
		i_max = i
	i += 1	
print("Ind Max of sequence = ", i_max)	

#-----------------------------------------------------------------


#task11------------------------------------------------------------
"""
Определите количество четных элементов в последовательности, завершающейся числом 0.
"""

even_number = 0
x = 1

while x != 0:
	if x % 10 == 0:
		even_number += 1
	x = int(input())
print("Quantity of even nubers = ", even_number)	

#-----------------------------------------------------------------

#task12------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0. 
Определите, сколько элементов этой последовательности больше предыдущего элемента.
"""

larg = 0
x = 1

while x != 0:
	n = int(input())
	if n > x:
		larg += 1
	x = n
print("Quantity of elements larger then previous = ", larg - 1)	

#-----------------------------------------------------------------


#task13------------------------------------------------------------
"""
Последовательность состоит из различных натуральных чисел и завершается числом 0. 
Определите значение второго по величине элемента в этой последовательности. 
Гарантируется, что в последовательности есть хотя бы два элемента.
"""

e_max = 0
sec_max = 0
x = 1

while x != 0:
	x = int(input())
	if x > e_max:
		sec_max = e_max
		e_max = x
print("Second Max of sequence = ", sec_max)	

#-----------------------------------------------------------------


#task14------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0. 
Определите, сколько элементов этой последовательности равны ее наибольшему элементу.
"""

e_max = 0
x = 1
n = 0

while x != 0:
	x = int(input())
	if x > e_max:
		e_max = x
		n = 1
	elif x == e_max:
		n += 1	

print("Number of Max of sequence = ", n)	

#-----------------------------------------------------------------


#task15------------------------------------------------------------
"""
Последовательность Фибоначчи определяется так:
φ0 = 0,  φ1 = 1,  φn = φn−1 + φn−2.

По данному числу n определите n-е число Фибоначчи φn.

Эту задачу можно решать и циклом for.
"""

q0 = 0
q1 = 1
n = int(input("Enter n "))

for i in range(2, n+1):
	qi = q0 + q1
	q0 = q1
	q1 = qi
print("Qn = ", qi)	

#-----------------------------------------------------------------


#task16------------------------------------------------------------
"""
Дано натуральное число A. Определите, каким по счету числом Фибоначчи оно является, то есть выведите такое число n, 
что φn = A. Если А не является числом Фибоначчи, выведите число -1.
"""

q0 = 0
q1 = 1
qi = 1
n = 0
a = int(input("Enter a "))

while qi < a:
	n += 1
	qi = q0 + q1
	q0 = q1
	q1 = qi
if qi != a:
	print("-1")
else:		
	print("Number of fibbonacci number is = ", n + 1)	

#-----------------------------------------------------------------


#task17------------------------------------------------------------
"""
Дана последовательность натуральных чисел, завершающаяся числом 0. 
Определите, какое наибольшее число подряд идущих элементов этой последовательности равны друг другу.
"""

prev_x = 0
n = 0
n_max = 0
x = 1

while x != 0:
	x = int(input())
	if x == prev_x:
		n += 1			
	prev_x = x
print("Number of Max elements of sequence = ", n + 1)	

#-----------------------------------------------------------------


#task18------------------------------------------------------------
"""
Дана последовательность натуральных чисел x1, x2, ..., xn. Стандартным отклонением называется величина
σ= √(x1−s)2+(x2−s)2+…+(xn−s)2/n−1
 где s = x1+x2+…+xn / n — среднее арифметическое последовательности.

Определите стандартное отклонение для данной последовательности натуральных чисел, завершающейся числом 0.
"""

from math import sqrt

x = 1
sum_x = 0
sum_x_2 = 0
dev = 0
s = 0
n = 0

while x != 0:
	x = int(input())
	sum_x += x
	sum_x_2 += x ** 2
	n += 1

n = n - 1	
s = sum_x / n

dev = sqrt((sum_x_2 - 2 * s * sum_x + n * s ** 2)/(n - 1))

print("Standart deviation of sequence = ", dev)	

#-----------------------------------------------------------------