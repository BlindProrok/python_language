#task1------------------------------------------------
"""
Умова: Дано два цілих числа. Вивести найменше з них.

Вхідні дані: користувач вводить ціле число

Вихідні дані: вивести ціле число
"""
#Програма для визначення меншого числа з двох
#number1, тип:int. Задане користувачем число 
#number2, тип:int. Задане користувачем число
#Блок введення інформації
number1 = int(input('Введіть ціле число'))

number2 = int(input('Введіть ціле число'))

#Обчислення
if (number1 > number2):
    
	print("Найменше число: ", number2)

else :
    
	print("Найменше число: ", number1)
#-----------------------------------------------------


#task2------------------------------------------------
"""
Умова: Вивести результат функції sign(x), що визначається наступним чином: 
sign(x) = 1, if x > 0, 
sign(x) = -1, if x < 0, 
sign(x) = 0, if x = 0..

Вхідні дані: користувач вводить дійсне число.

Вихідні дані: вивести результат sign.
"""
#Програма для визначення результату функції sign(x)
#user_number, тип:float. Задане користувачем число 
#Блок введення інформації
user_number = float(input('Введіть дійсне число'))


#Обчислення
if user_number > 0 :

    print("sign(", user_number, ") = 1")

elif user_number == 0 :

    print("sign(", user_number, ") = 0")

else:

    print("sign(", user_number, ") = -1")
#-----------------------------------------------------


#task3------------------------------------------------
"""
Умова: Дано три цілих числа. Вивести найменше з них.

Вхідні дані: 3 цілих числа.  Кожне число користувач вводить в окремому рядку.

Вихідні дані: вивести ціле число
"""
#Програма для визначення меншого числа з трьох
#number1, тип:int. Задане користувачем число 
#number2, тип:int. Задане користувачем число 
#number3, тип:int. Задане користувачем число  
#Блок введення інформації
number1 = int(input('Введіть ціле число'))
number2 = int(input('Введіть ціле число'))
number3 = int(input('Введіть ціле число'))
#Обчислення
if (number1 < number2) and (number1 < number3) :

    print("Найменше число: ", number1)

elif (number2 < number1) and (number2 < number3):

    print("Найменше число: ", number2)

elif (number3 < number1) and (number3 < number2):

    print("Найменше число: ", number3)
#-----------------------------------------------------


#task4------------------------------------------------
"""
Умова: Дано ціле число, що визначає рік. Визначити, чи є вказаний рік високосним. Якщо так, то вивести користувачу "LEAP", в іншому випадку – "СOMMON".

Рік високосний, якщо виконується хоча б одна з умов:

рік завжди високосним, якщо його номер ділиться на 4 без остачі і не ділиться без остачі на 100
рік завжди високосним, якщо його номер ділиться на 400 без остачі
Вхідні дані: ціле число, що вводить користувач

Вихідні дані: вивести текстовий рядок.
"""
#Програма для визначення меншого числа з трьох
#year, тип:int. Задане користувачем число    
#Блок введення інформації
year = int(input('Введіть значення року'))
#Обчислення
if (year%4 == 0) and (year%100 != 0):

    print("LEAP")

elif (year%400 == 0):

    print("LEAP")

else:

    print("COMMON")
#-----------------------------------------------------


#task5------------------------------------------------
"""
Умова: Дано три цілих числа. Визначте, скільки з них дорівнюють один одному. 
Програма повинна виводити одне з чисел: 3 (якщо всі числа однакові), 2 (якщо два з них дорівнюють один одному, а третє відрізняється) або 0 (якщо всі числа різні).

Вхідні дані: 3 цілих числа.  Кожне число користувач вводить в окремому рядку.

Вихідні дані: вивести ціле число
"""
#Програма для визначення кількості рівних чисел
#number1, тип:int. Задане користувачем число 
#number2, тип:int. Задане користувачем число 
#number3, тип:int. Задане користувачем число  
#Блок введення інформації
number1 = int(input('Введіть ціле число'))
number2 = int(input('Введіть ціле число'))
number3 = int(input('Введіть ціле число'))
#Обчислення
if (number1 == number2) and (number2 == number3) :

    print("3")

elif (number1 == number2) or (number2 == number3) or(number1 == number3):

    print("2")

else:

    print("0")
#-----------------------------------------------------


#task6------------------------------------------------
"""
Умова: Шахова тура переміщається по горизонталі або по вертикалі. Дано координати двох клітин шахової дошки. 
Визначити, чи може тура перейти з першої клітини у другу за один хід. 
Користувач вводить чотири цілих числа від 1 до 8, кожне з яких визначає номер рядку та стовпчика клітини. 
Перші два числа - для першої клітини, останні два числа – для другої. Програма має вивести "YES", якщо тура може виконати переміщення, або "NO" в іншому випадку.

Вхідні дані: 4 цілих числа.  Кожне число користувач вводить в окремому рядку.

Вихідні дані: вивести текстовий рядок.
"""
#Програма для визначення можливого ходу шахової фігури (тура)
#start_coordinate_x, тип:int. Задане користувачем число від 1 до 8
#start_coordinate_y, тип:int. Задане користувачем число від 1 до 8
#finish_coordinate_x, тип:int. Задане користувачем число від 1 до 8
#finish_coordinate_y, тип:int. Задане користувачем число від 1 до 8
#Блок введення інформації
start_coordinate_x = int(input('Введіть ціле число від 1 до 8'))
start_coordinate_y = int(input('Введіть ціле число від 1 до 8'))
finish_coordinate_x = int(input('Введіть ціле число від 1 до 8'))
finish_coordinate_y = int(input('Введіть ціле число від 1 до 8'))
#Обчислення
if (start_coordinate_x == finish_coordinate_x) or (start_coordinate_y == finish_coordinate_y):

    print("YES")

else:

    print("NO")
#-----------------------------------------------------


#task7------------------------------------------------
"""
Умова: Дано координати двох клітин шахової дошки. Визначити, чи однакового вони кольору. 
Користувач вводить чотири цілих числа від 1 до 8, кожне з яких визначає номер рядку та стовпчика клітини. 
Перші два числа - для першої клітини, останні два числа – для другої. Програма має вивести "YES", якщо колір однаковий, або "NO" в іншому випадку.

Вхідні дані: 4 цілих числа.  Кожне число користувач вводить в окремому рядку.

Вихідні дані: вивести текстовий рядок.
"""
#Програма для визначення клітинок однакового кольору
#start_coordinate_x, тип:int. Задане користувачем число від 1 до 8
#start_coordinate_y, тип:int. Задане користувачем число від 1 до 8
#finish_coordinate_x, тип:int. Задане користувачем число від 1 до 8
#finish_coordinate_y, тип:int. Задане користувачем число від 1 до 8
#Блок введення інформації
start_coordinate_x = int(input('Введіть ціле число від 1 до 8'))
start_coordinate_y = int(input('Введіть ціле число від 1 до 8'))
finish_coordinate_x = int(input('Введіть ціле число від 1 до 8'))
finish_coordinate_y = int(input('Введіть ціле число від 1 до 8'))
#Обчислення
if ((start_coordinate_x + finish_coordinate_x) % 2 == 0) and ((start_coordinate_y + finish_coordinate_y) % 2 == 0):

    print("YES")

elif  ((start_coordinate_x + start_coordinate_y) % 2 != 0) and ((start_coordinate_y + finish_coordinate_y) % 2 != 0):

    print("YES")

else :

        print("NO")
#-----------------------------------------------------


#task8------------------------------------------------
"""
Умова: Шаховий король переміщується по горизонталі, по вертикалі або по діагоналі на будь-яку сусідню клітинку. 
Дано координати двох клітин шахової дошки. Визначити, чи може король перейти з першої клітини у другу за один хід. 
Користувач вводить чотири цілих числа від 1 до 8, кожне з яких визначає номер рядку та стовпчика клітини. 
Перші два числа - для першої клітини, останні два числа – для другої. Програма має вивести "YES", якщо хід можливий, або "NO" в іншому випадку.

Вхідні дані: 4 цілих числа.  Кожне число користувач вводить в окремому рядку.

Вихідні дані: вивести текстовий рядок.
"""
#Програма для визначення можливого ходу шахової фігури (король)
#start_coordinate_x, тип:int. Задане користувачем число від 1 до 8
#start_coordinate_y, тип:int. Задане користувачем число від 1 до 8
#finish_coordinate_x, тип:int. Задане користувачем число від 1 до 8
#finish_coordinate_y, тип:int. Задане користувачем число від 1 до 8
#Блок введення інформації
start_coordinate_x = int(input('Введіть ціле число від 1 до 8'))
start_coordinate_y = int(input('Введіть ціле число від 1 до 8'))
finish_coordinate_x = int(input('Введіть ціле число від 1 до 8'))
finish_coordinate_y = int(input('Введіть ціле число від 1 до 8'))
#Обчислення
if (start_coordinate_x == finish_coordinate_x) and ((finish_coordinate_y == start_coordinate_y + 1) or (finish_coordinate_y == start_coordinate_y - 1)):

    print("YES")

elif (start_coordinate_y == finish_coordinate_y) and ((finish_coordinate_x == start_coordinate_x + 1) or (finish_coordinate_x == start_coordinate_x - 1)):

    print("YES")

elif ((finish_coordinate_y == start_coordinate_y + 1) and (finish_coordinate_x == start_coordinate_x + 1)) or (

(finish_coordinate_x == start_coordinate_x - 1) and (finish_coordinate_y == start_coordinate_y - 1)) or (
(finish_coordinate_x == start_coordinate_x + 1) and (finish_coordinate_y == start_coordinate_y - 1)) or (

(finish_coordinate_x == start_coordinate_x - 1) and (finish_coordinate_y == start_coordinate_y + 1)):
    print("YES") 

else:
    
	print("NO")
#-----------------------------------------------------


#task9------------------------------------------------
"""
Умова: Шаховий слон рухається по діагоналі на будь-яку кількість клітин. Дано координати двох клітин шахової дошки. 
Визначити, чи може слон перейти з першої клітини у другу за один хід. Користувач вводить чотири цілих числа від 1 до 8, кожне з яких визначає номер рядку та стовпчика клітини. 
Перші два числа - для першої клітини, останні два числа – для другої. Програма має вивести "YES", якщо хід можливий, або "NO" в іншому випадку.

Вхідні дані: 4 цілих числа.  Кожне число користувач вводить в окремому рядку.

Вихідні дані: вивести текстовий рядок.
"""
#Програма для визначення можливого ходу шахової фігури (слон)
#start_coordinate_x, тип:int. Задане користувачем число від 1 до 8
#start_coordinate_y, тип:int. Задане користувачем число від 1 до 8
#finish_coordinate_x, тип:int. Задане користувачем число від 1 до 8
#finish_coordinate_y, тип:int. Задане користувачем число від 1 до 8
#Імпортуємо модуль "math"
import math
#Блок введення інформації
start_coordinate_x = int(input('Введіть ціле число від 1 до 8'))
start_coordinate_y = int(input('Введіть ціле число від 1 до 8'))
finish_coordinate_x = int(input('Введіть ціле число від 1 до 8'))
finish_coordinate_y = int(input('Введіть ціле число від 1 до 8'))
#Обчислення
if (math.fabs(start_coordinate_x - finish_coordinate_x) == math.fabs(start_coordinate_y - finish_coordinate_y)):

    print("YES")

else:

    print("NO")
#-----------------------------------------------------


#task10------------------------------------------------
"""
Умова: Шахова королева рухається по горизонталі, по вертикалі або по діагоналі на будь-яку кількість клітин. 
Дано координати двох клітин шахової дошки. Визначити, чи може королева перейти з першої клітини у другу за один хід. 
Користувач вводить чотири цілих числа від 1 до 8, кожне з яких визначає номер рядку та стовпчика клітини. 
Перші два числа - для першої клітини, останні два числа – для другої. 
Програма має вивести "YES", якщо хід можливий, або "NO" в іншому випадку.

Вхідні дані: 4 цілих числа.  Кожне число користувач вводить в окремому рядку.

Вихідні дані: вивести текстовий рядок.
"""
#Програма для визначення можливого ходу шахової фігури (королев)
#start_coordinate_x, тип:int. Задане користувачем число від 1 до 8
#start_coordinate_y, тип:int. Задане користувачем число від 1 до 8
#finish_coordinate_x, тип:int. Задане користувачем число від 1 до 8
#finish_coordinate_y, тип:int. Задане користувачем число від 1 до 8
#Імпортуємо модуль "math"
import math
#Блок введення інформації
start_coordinate_x = int(input('Введіть ціле число від 1 до 8'))
start_coordinate_y = int(input('Введіть ціле число від 1 до 8'))
finish_coordinate_x = int(input('Введіть ціле число від 1 до 8'))
finish_coordinate_y = int(input('Введіть ціле число від 1 до 8'))
#Обчислення
if (start_coordinate_x == finish_coordinate_x) or (start_coordinate_y == finish_coordinate_y):

    print("YES")

elif (math.fabs(start_coordinate_x - finish_coordinate_x) == math.fabs(start_coordinate_y - finish_coordinate_y)):

    print("YES")

else:

    print("NO")
#-----------------------------------------------------


#task11------------------------------------------------
"""
Умова: Шаховий кінь рухається як літера L. Він може переміщатись на дві клітинки по горизонталі і одну клітинку по вертикалі або на дві клітинки по вертикалі і одну по горизонталі. Дано координати двох клітин шахової дошки. Визначити, чи може кінь перейти з першої клітини у другу за один хід. Користувач вводить чотири цілих числа від 1 до 8, кожне з яких визначає номер рядку та стовпчика клітини. Перші два числа - для першої клітини, останні два числа – для другої. Програма має вивести "YES", якщо хід можливий, або "NO" в іншому випадку.

Вхідні дані: 4 цілих числа.  Кожне число користувач вводить в окремому рядку.

Вихідні дані: вивести текстовий рядок.
"""
#Програма для визначення можливого ходу шахової фігури (кінь)
#start_coordinate_x, тип:int. Задане користувачем число від 1 до 8
#start_coordinate_y, тип:int. Задане користувачем число від 1 до 8
#finish_coordinate_x, тип:int. Задане користувачем число від 1 до 8
#finish_coordinate_y, тип:int. Задане користувачем число від 1 до 8
#Імпортуємо модуль "math"
import math
#Блок введення інформації
start_coordinate_x = int(input('Введіть ціле число від 1 до 8'))
start_coordinate_y = int(input('Введіть ціле число від 1 до 8'))
finish_coordinate_x = int(input('Введіть ціле число від 1 до 8'))
finish_coordinate_y = int(input('Введіть ціле число від 1 до 8'))
#Обчислення
if ((finish_coordinate_x == start_coordinate_x + 1) or (finish_coordinate_x == start_coordinate_x - 1)) and (
(finish_coordinate_y == start_coordinate_y + 2) or (finish_coordinate_y == start_coordinate_y - 2)):

    print("YES")

elif ((start_coordinate_y ==start_coordinate_y + 1) or (start_coordinate_y == start_coordinate_y - 1)) and (
(start_coordinate_x == finish_coordinate_x + 2) or (start_coordinate_x == finish_coordinate_x - 2)):

    print("YES")

else:

    print("NO")
#-----------------------------------------------------